// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Пользователь
model User {
    id              Int     @id @default(autoincrement())
    email           String  @unique
    password        String  
    firstName       String?
    lastName        String?
    dateOfBirth     DateTime     @db.Date
    role            Role         @default(USER)
    refreshToken    RefreshToken?
    //subscription    Subscription?

}

// Токин для обновления
model RefreshToken {
  id            Int       @id @default(autoincrement())
  refreshToken  String    @db.Uuid
  user          User?      @relation(fields: [userId], references: [id])
  userId        Int?       @unique
  expiredAt     DateTime       
}

// Совет дня
model AdviceDay {
  id      Int      @id @unique
  advice  String? 
}

// Задача периода
model TaskPeriod {
  id                        Int  @id @default(autoincrement())
  period                    Int                                   
  currentAge                String[]                                
  soulNumber                Int[]  // Число души [1-9]
  destinyNumber             Int[]  // число судьбы   [1-9]
  quantity1InCharacterField Int[]  // от 0 до бесконечности, -1 = не учитывается
  taskPeriod                Int    // 1-9
  task                      String
  strategicGoal             String 
}

// Текущий возраст
enum CurrentAge {
  LESS_OR_EQUAL_END_PERIOD   // меньше или равно окончанию периода
  MORE_END_PERIOD            // больше окончания периода
  FOR_ALL_AGE                // для всех возрастов
}

// Урок периода
model LessonPeriod {
    id            Int    @id @default(autoincrement())
    period        Int[]
    lessonPeriod  Int 
    lesson        String
}


// Новость
model News {
  id              Int          @id @default(autoincrement())
  title           String
  text            String
  imgPath         String
  datePosted      DateTime     @db.Date
}




// // Подписка
// model Subscription {
//   id            Int    @id @default(autoincrement())
//   duration      SubscriptionDuration
//   expiration    DateTime   
//   user          User   @relation(fields: [userId], references: [id])
//   userId Int    @unique
// }


// Роли
enum Role {
  USER
  ADMIN
}

// // Продолжительность подписки
// enum SubscriptionDuration {
//   ONE_MONTH
//   THREE_MONTH
//   SIX_MONTH
//   TWELVE_MONTH
// }



